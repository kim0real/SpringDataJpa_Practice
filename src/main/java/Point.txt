- Test Build 속도 향상
디폴트는 gradle까지 읽어 느리기 때문에 Settings - build 검색 - Build, Execution, Deployment - Gradle에서
Build and run using, Run tests using 모두 Intellij IDEA로 바꿔준다

- lombok 활성화
annotation processors - Enable annotation processing을 켜준다.

- 소프트웨어 공학에서 도메인 모델이란 특정 문제와 관련된 모든 주제의 개념 모델이다.(요구의 배경)
도메인 모델은 다양한 엔티티, 엔티티의 속성, 역할, 관계, 제약을 기술한다. 문제에 대한 솔루션을 기술하지 않는다.
* https://luv-n-interest.tistory.com/362

- T 엔티티, ID 엔티티의 식별자타입

- Save : 새로운 엔티티는 저장하고 이미 있는 엔티티는 병합한다.
getOne(ID) : 프록시를 조회한다.

- 스프링부트 자동설정(엔티티 -> 컬럼)
1. 카멜 케이스 -> 언더스코어
2. . -> 언더스코어
3. 대문자 -> 소문자

- @Transactional
JPA 모든 변경은 트랜잭션 안에서 동작
스프링 데이터 JPA는 구현체에서 변경 메서드를 트랜잭션 처리한다.
서비스 계층에서 트랜잭션을 시작하지 않으면 레파지토리에서 트랜잭션 시작
서비스 계층에서 트랜잭션을 시작하면 레파지토리는 해당 트랜잭션을 전파받아서 사용
그래서 스프링 데이터 JPA를 사용할 때 트랜잭션이 없어도 데이터 등록, 변경이 가능했던 것이다.(사실은 트랜잭션이 레파지토리 계층에 걸려있는 것임)

- @Transactional(ReadOnly = true)
데이터를 단순 조회만하고 flush를 하지 않으므로 약간의 성능 향상

- JPA Criteria, Query By Example, 네이티브 쿼리는 실무에서 사용할 일이 거의 없다.